
import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.chart.PieChart;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class FromQLNV extends javax.swing.JFrame {

    List<QLNV> lst = new ArrayList<>();
    DefaultTableModel model;
    int index;

    public FromQLNV() {
        initComponents();
        String[] columns = {"MSNV", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG"};
        String[][] rows = {};
        tbltable.setModel(new DefaultTableModel(rows, columns));

        setLocationRelativeTo(null);//dưa ra giữa màn hình
        model = (DefaultTableModel) tbltable.getModel();
        lst.add(new QLNV("ph10793", "Nguyễn Hữu Tú Anh", 18, "anhnhtph10793@fpt.edu.vn", 70000000));
        lst.add(new QLNV("ph10234", "Trần Mạnh Đạt", 20, "datmtph10234@pft.edu.vn", 13000000));
        lst.add(new QLNV("ph10543", "Cao Tiến Trung", 27, "trungctph10543@fpt.edu.vn", 20000000));
        lst.add(new QLNV("ph10756", "Dương Thị Hoa", 30, "hoadtph10756@fpt.edu.vn", 50000000));
        lst.add(new QLNV("ph10777", "Nguyễn Tố Hữu", 35, "huuntph10765@fpt.edu.vn", 24000000));

        //tbltable.setRowSelectionInterval(0, 0);//table chọn dòng index
        fillToTable();

        if (lst.size() > 0) {
            index = 1;
            showDetail();
        }
        //ĐỒNG HỒ
        SimpleDateFormat sdf = new SimpleDateFormat("hh:mm:aa");
        Thread t = new Thread() {
            Thread t = new Thread();

            @Override
            public void run() {
                while (true) {
                    Date d = new Date();
                    lblTime.setText(sdf.format(d));
                    try {
                        Thread.sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(FromQLNV.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }

        };
        t.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtmanv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtage = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtluong = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        bntnew = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        bntdelete = new javax.swing.JButton();
        bntfind = new javax.swing.JButton();
        btnSortByName = new javax.swing.JButton();
        BtnSortByAge = new javax.swing.JButton();
        btnReadFile = new javax.swing.JButton();
        btnWriteFile = new javax.swing.JButton();
        bntexit = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbltable = new javax.swing.JTable();
        lbltext = new javax.swing.JLabel();
        lblTime = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("                                                                  QUẢN LÝ NHÂN VIÊN\n");
        setBackground(new java.awt.Color(204, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 153, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("QUẢN LÝ NHÂN VIÊN");

        jLabel2.setBackground(java.awt.Color.orange);
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel2.setText("MÃ NHÂN VIÊN");

        jLabel3.setBackground(java.awt.Color.orange);
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel3.setText("HỌ VÀ TÊN");

        jLabel4.setBackground(java.awt.Color.orange);
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel4.setText("TUỔI");

        jLabel5.setBackground(java.awt.Color.orange);
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel5.setText("EMAIL");

        jLabel6.setBackground(java.awt.Color.orange);
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel6.setText("LƯƠNG");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bntnew.setText("New");
        bntnew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntnewActionPerformed(evt);
            }
        });

        btnsave.setText("Save");
        btnsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsaveMouseClicked(evt);
            }
        });
        btnsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsaveActionPerformed(evt);
            }
        });

        bntdelete.setText("Delete");
        bntdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntdeleteActionPerformed(evt);
            }
        });

        bntfind.setText("Find");
        bntfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntfindActionPerformed(evt);
            }
        });

        btnSortByName.setText("Sort By Name");
        btnSortByName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortByNameActionPerformed(evt);
            }
        });

        BtnSortByAge.setText("Sort By Salary");
        BtnSortByAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSortByAgeActionPerformed(evt);
            }
        });

        btnReadFile.setText("ReadFile");
        btnReadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReadFileActionPerformed(evt);
            }
        });

        btnWriteFile.setText("WriteFile");
        btnWriteFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteFileActionPerformed(evt);
            }
        });

        bntexit.setText("Exit");
        bntexit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntexitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bntnew, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(bntdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bntfind, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSortByName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BtnSortByAge, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnWriteFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnReadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(bntexit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntnew, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnsave, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bntdelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bntfind, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSortByName, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BtnSortByAge, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnWriteFile, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
                    .addComponent(btnReadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(bntexit, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(204, 255, 204));
        jButton1.setText("|<");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 255, 204));
        jButton2.setText("<<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setText(">>");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(204, 255, 204));
        jButton4.setText(">|");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tbltable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "MÃ", "HỌ VÀ TÊN", "TUỔI", "EMAIL", "LƯƠNG"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbltable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbltableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbltable);

        lbltext.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lbltext.setForeground(new java.awt.Color(255, 0, 51));
        lbltext.setText("Recourd 1 of 10");

        lblTime.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        lblTime.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE))
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtname)
                                            .addComponent(txtage)
                                            .addComponent(txtemail)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtmanv, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(41, 41, 41)
                                                .addComponent(jButton1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton4)
                                                .addGap(31, 31, 31)
                                                .addComponent(lbltext, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(34, 34, 34))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtluong, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(124, 124, 124)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)))))
                .addGap(61, 61, 61))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(lblTime, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtmanv, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtemail, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtluong, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 138, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lbltext, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            if (index < lst.size() - 1) {
                index++;
                showDetail();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không di chuyển được nữa");
        }
    }//GEN-LAST:event_jButton3ActionPerformed


    private void tbltableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbltableMouseClicked

        try {
            index = tbltable.getSelectedRow();
            
                showDetail();
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi click Table");
        }
    }//GEN-LAST:event_tbltableMouseClicked

    private void bntnewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntnewActionPerformed
        clearForm();
    }//GEN-LAST:event_bntnewActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            index = 0;
            showDetail();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không di chuyển được nữa");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            if (index > 0) {
                index--;
                showDetail();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không di chuyển được nữa");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {
            index = lst.size() - 1;
            showDetail();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Không di chuyển được nữa");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void bntdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntdeleteActionPerformed
        try {
            if (lst.size() == 0) {
                JOptionPane.showMessageDialog(this, "Không còn dữ liệu để xóa");
                return;
            }
            //hỏi xóa
            int hoi = JOptionPane.showConfirmDialog(this, "Bạn muốn xóa thật không?");
            if (hoi != JOptionPane.YES_OPTION) {
                return;
            }

            //thực hiện xóa trong list
            lst.remove(index);
            //xóa trong model (table) <=> fillToTable();
            model.removeRow(index);
            //xử lý sau khi xóa
            if (lst.size() == 0) {
                clearForm();
            } else {
                if (lst.size() == index) {
                    index--;
                }
                showDetail();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi xóa dữ liệu");
        }
    }//GEN-LAST:event_bntdeleteActionPerformed

    private void bntexitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntexitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_bntexitActionPerformed

    private void btnSortByNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortByNameActionPerformed
        //sắp xếp theo tên
        Comparator<QLNV> com = new Comparator<QLNV>() {
            @Override
            public int compare(QLNV o1, QLNV o2) {
                return o1.getHoten().compareTo(o2.getHoten());
            }
        };
        //thực hiện sắp xếp
        Collections.sort(lst, com);
        fillToTable();
    }//GEN-LAST:event_btnSortByNameActionPerformed

    private void BtnSortByAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSortByAgeActionPerformed
        //sắp xếp theo điểm
        Comparator<QLNV> com = new Comparator<QLNV>() {
            @Override
            public int compare(QLNV o1, QLNV o2) {
                Double d1 = o1.getLuong();
                Double d2 = o2.getLuong();
                return d1.compareTo(d2);//muốn sắp xếp thì đổi cho cho d1,d2

            }
        };
        Collections.sort(lst, com);
        fillToTable();
    }//GEN-LAST:event_BtnSortByAgeActionPerformed

    private void btnWriteFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteFileActionPerformed
        //Nhiệm vụ: ghi list => file
        //Về nhà nhớ bổ sung JFileChooser để chọn đường dẫn
        try {
            JFileChooser fchoose = new JFileChooser();
            int hoi = fchoose.showSaveDialog(this);
            if (hoi == JFileChooser.APPROVE_OPTION) {//nếu chọn được file
                String filename = fchoose.getSelectedFile().getAbsolutePath();//lấy đường dẫn file
                //B1: Tạo đối tượng đọc/ghi
                FileWriter fw = new FileWriter(filename);
                BufferedWriter bw = new BufferedWriter(fw);

                //B2: Thực hiện đọc/ghi
                bw.write(filename);
                //B3: Dong luong
                bw.flush();
                fw.flush();
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "ghi thành công!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi ghi file");
        }
    }//GEN-LAST:event_btnWriteFileActionPerformed

    private void btnReadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReadFileActionPerformed
        OpenFile();
        if (lst.size() > 0) {
            fillToTable();
            index = 0;
            showDetail();
        } else {
            index = -1;
            clearForm();
        }
    }//GEN-LAST:event_btnReadFileActionPerformed

    private void bntfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntfindActionPerformed
        String NV;
        int i;
        NV = JOptionPane.showInputDialog(null, "Nhập vào mã nhân viên cần tìm");
        for (i = 0; i < lst.size(); i++) {
            QLNV nv = lst.get(i);
            if (nv.manv.equalsIgnoreCase(NV)) {
                JOptionPane.showMessageDialog(this, "Nhân viên đã tìm thấy");
                index = i;
                showDetail();
                break;
            }
        }
        if (i == lst.size()) {
            this.bntnewActionPerformed(evt);
            JOptionPane.showMessageDialog(this, "không tìm thấy nhân viên");
        }
    }//GEN-LAST:event_bntfindActionPerformed

    private void btnsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsaveMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnsaveMouseClicked

    private void btnsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsaveActionPerformed
        // TODO add your handling code here:
        if (checknull()) {
            return;
        } else if (checkMaNV()) {
            return;
        } else if (checkHoTen()) {
            return;
        } else if (checkTuoi()) {
            return;
        } else if (checkemail()) {
            return;
        } else if (checkLuong()) {
            return;
        }
        if (index == -1) {
            this.addHocSinh();
            this.fillToTable();
        } else {
            //sửa trong list
            //sửa trong model
            String id = txtmanv.getText();
            String ten = txtname.getText();
            int tuoi = Integer.parseInt(txtage.getText());
            String email = txtemail.getText();
            Double luong = Double.parseDouble(txtluong.getText());
            QLNV nv = new QLNV(id, ten, tuoi, email, luong);
            lst.set(index, nv);
            model.setValueAt(id, index, 0);
            model.setValueAt(ten, index, 1);
            model.setValueAt(tuoi, index, 2);
            model.setValueAt(email, index, 3);
            model.setValueAt(luong, index, 4);
            //xử lí sau khi sửa
            showDetail();
            JOptionPane.showMessageDialog(this, "Sửa thành công");
        }
    }//GEN-LAST:event_btnsaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FromQLNV.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FromQLNV.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FromQLNV.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FromQLNV.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FromQLNV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnSortByAge;
    private javax.swing.JButton bntdelete;
    private javax.swing.JButton bntexit;
    private javax.swing.JButton bntfind;
    private javax.swing.JButton bntnew;
    private javax.swing.JButton btnReadFile;
    private javax.swing.JButton btnSortByName;
    private javax.swing.JButton btnWriteFile;
    private javax.swing.JButton btnsave;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTime;
    private javax.swing.JLabel lbltext;
    private javax.swing.JTable tbltable;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtluong;
    private javax.swing.JTextField txtmanv;
    private javax.swing.JTextField txtname;
    // End of variables declaration//GEN-END:variables
 private void fillToTable() {
        model.setRowCount(0);
        for (QLNV x : lst) {
            model.addRow(new Object[]{x.getManv(), x.getHoten(), x.getTuoi(), x.getEmail(),String.format("%.0f", x.getLuong())});
        }
    }

    private void addHocSinh() {
        try {
            QLNV nv = new QLNV();
            nv.manv = txtmanv.getText();
            nv.hoten = txtname.getText();
            nv.tuoi = Integer.parseInt(txtage.getText());
            nv.email = txtemail.getText();
            nv.luong = Double.parseDouble(txtluong.getText());
            lst.add(nv);
            JOptionPane.showMessageDialog(this, "thêm thành công");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi");
        }
//        try {
//            Employee nv = new Employee();
//            nv.maNV = txtMaNhanVien.getText();
//            nv.hoTen = txtHoTen.getText();
//            nv.tuoi = Integer.parseInt(txtTuoi.getText());
//            nv.email = txtEmail.getText();
//            nv.luong = Double.parseDouble(txtLuong.getText());
//            //Bổ sung sv vào List<Student>
//            lstEmployee.add(nv);
//            JOptionPane.showMessageDialog(this, "Thêm thành công");
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Lỗi");
//        }

    }

    private void showDetail() {
        QLNV hs = lst.get(index);
        txtmanv.setText(hs.getManv());
        txtname.setText(hs.getHoten());
        txtage.setText(hs.getTuoi() + "");
        txtemail.setText(hs.getEmail());
        txtluong.setText(String.format("%.0f", hs.getLuong()));
        lbltext.setText("Record: " + (index + 1) + " of " + lst.size());//hiển thị vị trí hiện tại
        tbltable.setRowSelectionInterval(index, index);//table chọn dòng index
    }

    private void clearForm() {
        txtmanv.setText("");
        txtname.setText("");
        txtage.setText("");
        txtemail.setText("");
        txtluong.setText("");
        index = -1;
    }

    private boolean checknull() {
        try {
            //bắt lỗi null
            if (txtmanv.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập mã nhân viên");
                txtmanv.requestFocus();//đặt con trỏ vào ô txtDiem               
                return true;
            } else if (txtname.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tên của mình");
                txtname.requestFocus();//đặt con trỏ vào ô txtDiem
                return true;
            } else if (txtage.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "vui lòng nhập tuổi của mình");
                txtage.requestFocus();
                return true;
            } else if (txtemail.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "vui lòng nhập email của mình vào");
                txtemail.requestFocus();
                return true;
            } else if (txtluong.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "vui lòng nhập lương của mình");
                txtluong.requestFocus();
                return true;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Lỗi nhập");
        }
        return false;
    }

    private boolean checkTuoi() {
        int tuoi;
        try {

            //bắt lỗi điểm là số
            tuoi = Integer.parseInt(txtage.getText());//Double.parseDouble(txtDiem.getText());
            //bắt điểm từ 0-10
            if (tuoi < 16 || tuoi > 55) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập tuổi từ 16-55");
                txtage.requestFocus();
                txtage.setBackground(Color.yellow);
                return true;//dừng không đi tiếp

            } else {
                txtage.setBackground(Color.white);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tuổi là số");
            txtage.requestFocus();
        }
        return false;
    }

    private boolean checkemail() {
        try {
            String mauEmail = "\\w+@\\w+(\\.\\w+){1,2}";
            String email = txtemail.getText();
            if (!email.matches(mauEmail)) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng email");
                txtemail.requestFocus();
                return true;

            }
        } catch (Exception e) {

            JOptionPane.showMessageDialog(this, "lỗi check from");
        }
        return false;
    }

    private boolean checkLuong() {
        //kiểm tra lương

        try {
            double salary = Double.parseDouble(txtluong.getText());
            if (salary < 5000000) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập lương lớn hơn 5000000");
                txtluong.setBackground(Color.yellow);
                return true;
            } else {
                txtluong.setBackground(Color.white);
            }
            return false;
        } catch (Exception e) {
            txtluong.setBackground(Color.yellow);
            JOptionPane.showMessageDialog(this, "Bạn nhập không hợp lệ phải là giá trị số");
            //check email
            return true;
        }
    }

    private boolean checkHoTen() {
        String hoTen;
        try {
            hoTen = txtname.getText();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập họ tên là chữ");
            txtname.requestFocus();
        }
        return false;
    }

    private boolean checkMaNV() {
        return false;
    }

    private void OpenFile() {
        try {
            JFileChooser fchoose = new JFileChooser();
            int hoi = fchoose.showOpenDialog(this);
            if (hoi == JFileChooser.APPROVE_OPTION) {//nếu chọn được file
                String filename = fchoose.getSelectedFile().getAbsolutePath();//lấy đường dẫn file
                //B1: Tạo đối tượng đọc/ghi
                FileInputStream fis = new FileInputStream(filename);
                ObjectInputStream ois = new ObjectInputStream(fis);
                //B2: Thực hiện đọc
                lst = (ArrayList<QLNV>) ois.readObject();
                //B3: Đóng luồng          
                ois.close();
                ois.close();
                JOptionPane.showMessageDialog(this, "Đọc thành công");
//            
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "lỗi đọc file");
            e.printStackTrace();
        }
    }
}
